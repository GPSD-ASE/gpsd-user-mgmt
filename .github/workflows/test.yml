name: Run Go Tests (TDD)

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: gpsd_user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: gpsd_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      ENV: test
      DB_USER: gpsd_user
      DB_PASS: password
      DB_PORT: 5432
      DB_HOST: localhost
      DB_NAME: gpsd_db

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Start postgres
        run: sudo systemctl start postgresql.service

      - name: Check if postgres is running
        run: sudo systemctl status postgresql.service

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.5"

      - name: Verify Go installation
        run: go version

      - name: Enable Go Modules
        run: |
          echo "GO111MODULE=on" >> $GITHUB_ENV
          echo "PATH=$(go env GOPATH)/bin:$PATH" >> $GITHUB_ENV

      - name: Change to the correct directory
        run: cd ${{ github.workspace }}

      - name: List project files (Debugging)
        run: ls -la ${{ github.workspace }}

      - name: Ensure go.mod exists
        run: test -f ./go.mod || (echo "go.mod is missing!"; exit 1)

      - name: Install dependencies
        run: go mod tidy
        working-directory: ${{ github.workspace }}

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..30}; do
            pg_isready -h localhost -p 5432 -U gpsd_user && exit 0
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          echo "PostgreSQL did not start in time" && exit 1
        env:
          PGPASSWORD: password

      - name: Run tests
        run: go test -v ./src/tests
        working-directory: ${{ github.workspace }}
